{"title":"(메모) DGX station 설정","markdown":{"yaml":{"title":"(메모) DGX station 설정","author":"신록예찬","date":"01/10/2000"},"headingText":"1. MIG","containsRefs":false,"markdown":"\n\n\n## A. MIG 모드 enable\n\n`-` root 획득 \n\n```bash \nsudo -i \n```\n\n`-` 모든 GPU enable \n\n```bash\nnvidia-smi -mig 1 \nsudo systemctl stop nvidia-mig-manager.service\nsudo systemctl disable nvidia-mig-manager.service\nreboot\n```\n\n`-` 모든 특정 GPU만 enable\n\n```bash\n#nvidia-smi -i {GPUdev-ID} -mig 1\nnvidia-smi -i 0 -mig 1 \nsudo systemctl stop nvidia-mig-manager.service\nsudo systemctl disable nvidia-mig-manager.service\nreboot \n```\n\n`-` GPU가 MIG 모드로 되면 아래와 같이 GPU-Util 에 `N/A`로 표시된다. 아래는 0,1,2,4 에 대응하는 GPU가 MIG모드로 설정된 상태임\n\n![](attachment:df0bf4cb-6b75-4ff9-af8e-92f83d9a45e2.png)\n\n## B. GPU, GI, CI 확인 \n\n`-` 용어정리\n\n- GPU: 말 그대로 GPU\n- GI: GPU INSTANCE, 하나의 GPU에 여러개의 GPU INSTANCE가 존재할 수 있음. \n- CI: COMPUTE INSTANCE, 하나의 GPU INSTANCE에 여러개의 COMPUTE INSTANCE를 만들 수 있음. \n\n`-` 상황확인 \n\n```bash\nnvidia-smi \n```\n\n![](attachment:df0bf4cb-6b75-4ff9-af8e-92f83d9a45e2.png)\n\n`-` GPU의 해석 \n\n```\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  NVIDIA A100-SXM...  On   | 00000000:01:00.0 Off |                   On |\n| N/A   37C    P0    53W / 275W |      0MiB / 81251MiB |     N/A      Default |\n|                               |                      |              Enabled |\n+-------------------------------+----------------------+----------------------+\n|   1  NVIDIA A100-SXM...  On   | 00000000:47:00.0 Off |                   On |\n| N/A   38C    P0    52W / 275W |      0MiB / 81251MiB |     N/A      Default |\n|                               |                      |              Enabled |\n+-------------------------------+----------------------+----------------------+\n|   2  NVIDIA A100-SXM...  On   | 00000000:81:00.0 Off |                   On |\n| N/A   37C    P0    54W / 275W |      0MiB / 81251MiB |     N/A      Default |\n|                               |                      |              Enabled |\n+-------------------------------+----------------------+----------------------+\n|   3  NVIDIA DGX Display  On   | 00000000:C1:00.0 Off |                  N/A |\n| 36%   39C    P8    N/A /  50W |      1MiB /  3911MiB |      0%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n|   4  NVIDIA A100-SXM...  On   | 00000000:C2:00.0 Off |                   On |\n| N/A   37C    P0    55W / 275W |      0MiB / 81251MiB |     N/A      Default |\n|                               |                      |              Enabled |\n+-------------------------------+----------------------+----------------------+\n```\n\n총 4개의 GPU가 있으며 아이디는 0,1,2,4 임을 알 수 있다. \n\n`-` `GPUdev-ID`, `GI-ID`, `CI-ID`, `MIGdev-ID` 확인 \n\n```\n+-----------------------------------------------------------------------------+\n| MIG devices:                                                                |\n+------------------+----------------------+-----------+-----------------------+\n| GPU  GI  CI  MIG |         Memory-Usage |        Vol|         Shared        |\n|      ID  ID  Dev |           BAR1-Usage | SM     Unc| CE  ENC  DEC  OFA  JPG|\n|                  |                      |        ECC|                       |\n|==================+======================+===========+=======================|\n|  1    0   0   0  |      0MiB / 81251MiB | 98      0 |  7   0    5    1    1 |\n|                  |      1MiB / 13107... |           |                       |\n+------------------+----------------------+-----------+-----------------------+\n|  2    0   0   0  |      0MiB / 81251MiB | 98      0 |  7   0    5    1    1 |\n|                  |      1MiB / 13107... |           |                       |\n+------------------+----------------------+-----------+-----------------------+\n```\n\n아래와 같은 상황을 유추할 수 있다. \n\n| GPUdev ID | GI ID      | CI ID      | MIGdev ID |\n|--------|------------|------------|-----------|\n|   1    |  0 (80G)   |  0 (98SM)  |     0     |\n|   2    |  0 (80G)   |  0 (98SM)  |     0     |\n\n\n`-` 생성가능한 gi 확인 \n\n![](attachment:4bf8348a-6689-43be-8c2a-de78b1bf8804.png)\n\n`-` 생성가능한 ci 확인 \n\n![Note: GPU 1,2 에만 GI가 존재하므로, 목록에는 GPU 1,2 만 보임](attachment:083e71fb-ac1b-4d0d-83db-3a2e6aac1681.png)\n\n## C. GI 생성 \n\n`-` `GPUdev` = 4 에서 생성가능한 `GI` 조회 \n\n```bash\n#nvidia-smi mig -i {GPUdev-ID} -lgip\nnvidia-smi mig -i 4 -lgip\n```\n\n![](attachment:385f197c-ec7a-46f8-9f2a-3d1c989fd82c.png)\n\n`-` 아래에 해당하는 `GI`를 2개 생성하고 싶다고 하자. (`GPU-INSTANCE-PROFILE-ID`=9 임을 유의)\n```\n+-----------------------------------------------------------------------------+\n| GPU instance profiles:                                                      |\n| GPU   Name             ID    Instances   Memory     P2P    SM    DEC   ENC  |\n|                              Free/Total   GiB              CE    JPEG  OFA  |\n|=============================================================================|\n|   4  MIG 3g.40gb        9     0/2        39.50      No     42     2     0   |\n|                                                             3     0     0   |\n+-----------------------------------------------------------------------------+\n```\n\n```bash\n#nvidia-smi mig -i {GPUdev-ID} -cgi {GPU-INSTANCE-PROFILE-ID}\nnvidia-smi mig -i 4 -cgi 9 \nnvidia-smi mig -i 4 -cgi 9 \n```\n\n![Note: 2개까지는 잘 ㅁ나들어지고 그 이후에는 리소스 부족으로 에러가 발생한다.](attachment:c80a5ffb-7c5f-4124-95fa-c89f7d132d6d.png)\n\n> 2개까지는 잘 만들어지고 그 이후에는 리소스부족으로 에러발생 \n\n`-` 만들어진 `GI` 확인 \n\n![Note: 1,2번 GPU에 각각 GI가 1개씩 있고 4번 GPU에 GI가 2개 있다.](attachment:49b1ecd2-049c-4e51-9d23-5d97477a5e1c.png)\n\n`-` 생성가능한 `CI` 확인 \n\n```bash\nnvidia-smi mig -lcip\n```\n\n![Note: {GPU ID: GPU INSTANCE ID} 의 조합에서 {1:0}, {2:0}, {4:1}, {4:2} 에 해당하는 GI에서 생성가능한 CI들이 각각 출력된다. 4번 GPU의 GI들은 40기가가 한계이므로 생성가능 CI목록이 상대적으로 제한적임을 캐치하라](attachment:8649fd20-87c2-4b8c-a05b-40bc8b9e54bc.png)\n\n## D. CI 생성 \n\n`-` `GPUdev`=4 에서 생성가능한 `CI` 조회 \n\n```bash\n#nvidia-smi mig -i {GPU ID} -lcip\nnvidia-smi mig -i 4 -lcip\n```\n\n![Note: 각 GPU-인스턴스(GI)에서는 3개 계산-인스턴스(CI)를 만들수 있음. 만약에 `Profile ID = 0` 으로 만든다면 14의 계산능력을 가진 CI를 3개까지 만들수 있음, 만약 `Profile ID = 2*` 로 만든다면 42개의 계산능력을 가진 CI를 1개만 만들 수 있음](attachment:afaddcc7-847b-45e9-9988-946572524348.png)\n\n`-` {`GPUdev-ID`:`GI-ID`} = {4:1} 에서 `COMPUTE-INSTANCE-PROFILE-ID`=0 에 해당하는 CI를 3개 생성 \n\n```bash\n#nvidia-smi mig -i {GPUdev-ID} -gi {GI-ID} -cci {COMPUTE-INSTANCE-PROFILE-ID}\nnvidia-smi mig -i 4 -gi 1 -cci 0\n```\n\n![Note: 자원부족으로 3개까지 밖에 못만든다..](attachment:3690903a-40be-4384-9ebc-c814535e95df.png)\n\n`-` {`GPUdev-ID`:`GI-ID`}={4:2} 에서 `COMPUTE-INSTANCE-PROFILE-ID`=2 에 해당하는 CI를 1개 생성 \n\n```bash\n#nvidia-smi mig -i {GPUdev-ID} -gi {GI-ID} -cci {COMPUTE-INSTANCE-PROFILE-ID}\nnvidia-smi mig -i 4 -gi 2 -cci 2 \n```\n\n![Note: 자원이 부족해서 1개밖에 못 만든다.](attachment:318514ed-7328-4e4c-b2de-fcb83322dad5.png)\n\n`-` 현재 상황 \n\n![](attachment:e262e8c0-bbc8-4cfa-b836-8bab80440edd.png)\n\n| GPUdev ID | GI ID      | CI ID     | MIGdev ID |\n|--------|------------|-----------|-----------|\n|   1    |  0 (80G)   |  0 (98SM) |     0     |\n|   2    |  0 (80G)   |  0 (98SM) |     0     |\n|   4    |  1 (80G)   |  0 (14SM) |     0     |\n|   4    |  1 (80G)   |  1 (14SM) |     1     |\n|   4    |  1 (80G)   |  2 (14SM) |     2     |\n|   4    |  2 (80G)   |  0 (42SM) |     3     |\n\n## E. 요약 \n\n``` bash\nnvidia-smi mig -i 0 -cgi 0   \nnvidia-smi mig -i 1 -cgi 0   \nnvidia-smi mig -i 2 -cgi 0   \nnvidia-smi mig -i 4 -cgi 0   \nnvidia-smi mig -i 0 -gi 0 -cci 4\nnvidia-smi mig -i 1 -gi 0 -cci 4\nnvidia-smi mig -i 2 -gi 0 -cci 4\nnvidia-smi mig -i 4 -gi 0 -cci 4\n```\n\n# 2. DOCKER\n\n## A. 컨테이너 생성 \n\n`-` 아래와 같은 방식으로 컨테이너 생성 \n\n```bash\n# nvidia-docker run --gpus '\"device={GPUdev-ID}:{MIGdev-ID}\"' -ti --rm -d -t -p {HOST-PORT}:{CONTAINER-PORT} {DOCKER-IMAGE-NAME} /bin/bash\nnvidia-docker run --gpus '\"device=1:0\"' -ti --rm -d -t -p 7749:7749  -p 1307:1307 ubuntu /bin/bash\nnvidia-docker run --gpus '\"device=2:0\"' -ti -d -t -p 4653:4653  -p 1212:1212 -p 1213:1213 -p 1214:1214 ubuntu /bin/bash\n```\n\n- `-ti`: 컨테이너를 대화형(interactive) 모드로 실행. 이 모드에서 컨테이너와 상호작용할 수 있음.\n- `--rm`: 컨테이너가 종료되면 자동으로 컨테이너를 삭제. 이 옵션을 사용하면 컨테이너를 실행한 후 자동으로 정리.\n- `-d`: 컨테이너를 백그라운드(background) 모드로 실행. 이 옵션을 사용하면 컨테이너가 백그라운드에서 실행되며 터미널이 차지되지 않음.\n- `-t`: 컨테이너에 tty (터미널)를 할당. 이것은 대화형 모드와 함께 사용.\n- `/bin/bash`: 컨테이너가 시작될 때 실행할 명령어. 이 경우, Bash 셸을 실행.\n\n\n\n## B. 컨테이너 실행 \n\n```bash\ndocker exec -ti {CONTAINER-ID} bash\n```\n\n\n> 여기에서 `{CONTAINER-ID}`는 `docker ps` 혹은 `docker ps -a`로 확인한다. \n\n## C. 요약 \n\n```bash\nnvidia-docker run --gpus '\"device=2:0\"' -ti -d -t -p ????:???? -p ????:???? -p ????:???? -p ????:???? -p ????:???? --name cgb ubuntu /bin/bash\ndocker exec -ti cgb bash \n```\n\n# 3. UBUNTU \n\n## A. `passwd` \n\n`-` 아래를 실행하여 비밀번호를 바꿀것 \n\n```bash\npasswd root\n```\n\n## B. update \\& 쓸만한 패키지 설치\n\n`-` update \n\n```bash \napt update \napt install gcc\napt install build-essential\n```\n\n`-` 쓸만한 패키지 설치 \n\n```bash\napt install vim # vim \napt install openssh-server # ssh \napt install git # git \napt install tmux\n```\n\n`-` 요약 \n\n```bash\napt update && apt install -y gcc build-essential vim openssh-server git tmux\n```\n\n## D. `ssh` 설정\n\n`-` `/etc/ssh/sshd_config` 열기 \n\n```bash\n# apt install openssh-server\nvi /etc/ssh/sshd_config \n```\n\n`-` `/etc/ssh/sshd_config` 파일내용 맨아래 아래를 추가 \n\n```default\n\n...\n...\nPort {My-SSH-Port}\nPermitRootLogin yes\nPasswordAuthentication yes\n```\n\n`-` 아래를 실행 \n\n```bash \nservice ssh restart\n```\n\n## E. anaconda\n\n`-` 다운로드: <https://www.anaconda.com/download>\n\n`-` (아나콘다 설치) 아나콘다를 다운받은 폴더로 가서 아래와 같이 실행한다. \n\n```bash\nbash Anaconda3-2019.03-Linux-x86_64.sh\n```\n\n대충 `bash Ana` 정도까지만 치고 `tab`을 누르면 알아서 완성된다. \n\n\n## F. vscode \n\n`-` 아래를 이용하여 설치 \n\n```bash\ncurl -Lk 'https://code.visualstudio.com/sha/download?build=stable&os=cli-alpine-x64' --output vscode_cli.tar.gz\ntar -xf vscode_cli.tar.gz\n```\n\n`-` 아래를 이용하여 초기 설정 (깃헙아이디로 인증)\n\n```bash\n./code tunnel \n```\n\n`-` 초기설정 이후 아래를 이용하여 백그라운드에서 실행 \n\n```bash\nnohup ./code tunnel > /dev/null 2>&1 &\n```\n\n## G. Jupyter \n\n`-` 설정파일 생성 \n\n```bash\njupyter notebook --generate-config\n```\n\n`-` 패스워드 설정 \n\n```bash\njupyter notebook password\n## 패스워드 치고\n## 확인해야함\n```\n\n`-` 설정파일을 열고\n\n```bash\nvi /home/cgb2/.jupyter/jupyter_notebook_config.py\n```\n\n아래의 내용을 수정한다.\n\n```default\nc.??????App.ip = '0.0.0.0'\nc.??????App.port = 1307\nc.??????App.allow_origin = '*'\nc.??????App.allow_remote_access = True\nc.??????App.allow_root = True\n```\n\n`-` 주피터 실행할때 아래로 실행 \n\n```bash\nnohup jupyter lab --ip=\"0.0.0.0\" --port={MY-PORT} --no-browser --allow-root > /dev/null 2>&1 &\n```\n","srcMarkdownNoYaml":"\n\n# 1. MIG\n\n## A. MIG 모드 enable\n\n`-` root 획득 \n\n```bash \nsudo -i \n```\n\n`-` 모든 GPU enable \n\n```bash\nnvidia-smi -mig 1 \nsudo systemctl stop nvidia-mig-manager.service\nsudo systemctl disable nvidia-mig-manager.service\nreboot\n```\n\n`-` 모든 특정 GPU만 enable\n\n```bash\n#nvidia-smi -i {GPUdev-ID} -mig 1\nnvidia-smi -i 0 -mig 1 \nsudo systemctl stop nvidia-mig-manager.service\nsudo systemctl disable nvidia-mig-manager.service\nreboot \n```\n\n`-` GPU가 MIG 모드로 되면 아래와 같이 GPU-Util 에 `N/A`로 표시된다. 아래는 0,1,2,4 에 대응하는 GPU가 MIG모드로 설정된 상태임\n\n![](attachment:df0bf4cb-6b75-4ff9-af8e-92f83d9a45e2.png)\n\n## B. GPU, GI, CI 확인 \n\n`-` 용어정리\n\n- GPU: 말 그대로 GPU\n- GI: GPU INSTANCE, 하나의 GPU에 여러개의 GPU INSTANCE가 존재할 수 있음. \n- CI: COMPUTE INSTANCE, 하나의 GPU INSTANCE에 여러개의 COMPUTE INSTANCE를 만들 수 있음. \n\n`-` 상황확인 \n\n```bash\nnvidia-smi \n```\n\n![](attachment:df0bf4cb-6b75-4ff9-af8e-92f83d9a45e2.png)\n\n`-` GPU의 해석 \n\n```\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  NVIDIA A100-SXM...  On   | 00000000:01:00.0 Off |                   On |\n| N/A   37C    P0    53W / 275W |      0MiB / 81251MiB |     N/A      Default |\n|                               |                      |              Enabled |\n+-------------------------------+----------------------+----------------------+\n|   1  NVIDIA A100-SXM...  On   | 00000000:47:00.0 Off |                   On |\n| N/A   38C    P0    52W / 275W |      0MiB / 81251MiB |     N/A      Default |\n|                               |                      |              Enabled |\n+-------------------------------+----------------------+----------------------+\n|   2  NVIDIA A100-SXM...  On   | 00000000:81:00.0 Off |                   On |\n| N/A   37C    P0    54W / 275W |      0MiB / 81251MiB |     N/A      Default |\n|                               |                      |              Enabled |\n+-------------------------------+----------------------+----------------------+\n|   3  NVIDIA DGX Display  On   | 00000000:C1:00.0 Off |                  N/A |\n| 36%   39C    P8    N/A /  50W |      1MiB /  3911MiB |      0%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n|   4  NVIDIA A100-SXM...  On   | 00000000:C2:00.0 Off |                   On |\n| N/A   37C    P0    55W / 275W |      0MiB / 81251MiB |     N/A      Default |\n|                               |                      |              Enabled |\n+-------------------------------+----------------------+----------------------+\n```\n\n총 4개의 GPU가 있으며 아이디는 0,1,2,4 임을 알 수 있다. \n\n`-` `GPUdev-ID`, `GI-ID`, `CI-ID`, `MIGdev-ID` 확인 \n\n```\n+-----------------------------------------------------------------------------+\n| MIG devices:                                                                |\n+------------------+----------------------+-----------+-----------------------+\n| GPU  GI  CI  MIG |         Memory-Usage |        Vol|         Shared        |\n|      ID  ID  Dev |           BAR1-Usage | SM     Unc| CE  ENC  DEC  OFA  JPG|\n|                  |                      |        ECC|                       |\n|==================+======================+===========+=======================|\n|  1    0   0   0  |      0MiB / 81251MiB | 98      0 |  7   0    5    1    1 |\n|                  |      1MiB / 13107... |           |                       |\n+------------------+----------------------+-----------+-----------------------+\n|  2    0   0   0  |      0MiB / 81251MiB | 98      0 |  7   0    5    1    1 |\n|                  |      1MiB / 13107... |           |                       |\n+------------------+----------------------+-----------+-----------------------+\n```\n\n아래와 같은 상황을 유추할 수 있다. \n\n| GPUdev ID | GI ID      | CI ID      | MIGdev ID |\n|--------|------------|------------|-----------|\n|   1    |  0 (80G)   |  0 (98SM)  |     0     |\n|   2    |  0 (80G)   |  0 (98SM)  |     0     |\n\n\n`-` 생성가능한 gi 확인 \n\n![](attachment:4bf8348a-6689-43be-8c2a-de78b1bf8804.png)\n\n`-` 생성가능한 ci 확인 \n\n![Note: GPU 1,2 에만 GI가 존재하므로, 목록에는 GPU 1,2 만 보임](attachment:083e71fb-ac1b-4d0d-83db-3a2e6aac1681.png)\n\n## C. GI 생성 \n\n`-` `GPUdev` = 4 에서 생성가능한 `GI` 조회 \n\n```bash\n#nvidia-smi mig -i {GPUdev-ID} -lgip\nnvidia-smi mig -i 4 -lgip\n```\n\n![](attachment:385f197c-ec7a-46f8-9f2a-3d1c989fd82c.png)\n\n`-` 아래에 해당하는 `GI`를 2개 생성하고 싶다고 하자. (`GPU-INSTANCE-PROFILE-ID`=9 임을 유의)\n```\n+-----------------------------------------------------------------------------+\n| GPU instance profiles:                                                      |\n| GPU   Name             ID    Instances   Memory     P2P    SM    DEC   ENC  |\n|                              Free/Total   GiB              CE    JPEG  OFA  |\n|=============================================================================|\n|   4  MIG 3g.40gb        9     0/2        39.50      No     42     2     0   |\n|                                                             3     0     0   |\n+-----------------------------------------------------------------------------+\n```\n\n```bash\n#nvidia-smi mig -i {GPUdev-ID} -cgi {GPU-INSTANCE-PROFILE-ID}\nnvidia-smi mig -i 4 -cgi 9 \nnvidia-smi mig -i 4 -cgi 9 \n```\n\n![Note: 2개까지는 잘 ㅁ나들어지고 그 이후에는 리소스 부족으로 에러가 발생한다.](attachment:c80a5ffb-7c5f-4124-95fa-c89f7d132d6d.png)\n\n> 2개까지는 잘 만들어지고 그 이후에는 리소스부족으로 에러발생 \n\n`-` 만들어진 `GI` 확인 \n\n![Note: 1,2번 GPU에 각각 GI가 1개씩 있고 4번 GPU에 GI가 2개 있다.](attachment:49b1ecd2-049c-4e51-9d23-5d97477a5e1c.png)\n\n`-` 생성가능한 `CI` 확인 \n\n```bash\nnvidia-smi mig -lcip\n```\n\n![Note: {GPU ID: GPU INSTANCE ID} 의 조합에서 {1:0}, {2:0}, {4:1}, {4:2} 에 해당하는 GI에서 생성가능한 CI들이 각각 출력된다. 4번 GPU의 GI들은 40기가가 한계이므로 생성가능 CI목록이 상대적으로 제한적임을 캐치하라](attachment:8649fd20-87c2-4b8c-a05b-40bc8b9e54bc.png)\n\n## D. CI 생성 \n\n`-` `GPUdev`=4 에서 생성가능한 `CI` 조회 \n\n```bash\n#nvidia-smi mig -i {GPU ID} -lcip\nnvidia-smi mig -i 4 -lcip\n```\n\n![Note: 각 GPU-인스턴스(GI)에서는 3개 계산-인스턴스(CI)를 만들수 있음. 만약에 `Profile ID = 0` 으로 만든다면 14의 계산능력을 가진 CI를 3개까지 만들수 있음, 만약 `Profile ID = 2*` 로 만든다면 42개의 계산능력을 가진 CI를 1개만 만들 수 있음](attachment:afaddcc7-847b-45e9-9988-946572524348.png)\n\n`-` {`GPUdev-ID`:`GI-ID`} = {4:1} 에서 `COMPUTE-INSTANCE-PROFILE-ID`=0 에 해당하는 CI를 3개 생성 \n\n```bash\n#nvidia-smi mig -i {GPUdev-ID} -gi {GI-ID} -cci {COMPUTE-INSTANCE-PROFILE-ID}\nnvidia-smi mig -i 4 -gi 1 -cci 0\n```\n\n![Note: 자원부족으로 3개까지 밖에 못만든다..](attachment:3690903a-40be-4384-9ebc-c814535e95df.png)\n\n`-` {`GPUdev-ID`:`GI-ID`}={4:2} 에서 `COMPUTE-INSTANCE-PROFILE-ID`=2 에 해당하는 CI를 1개 생성 \n\n```bash\n#nvidia-smi mig -i {GPUdev-ID} -gi {GI-ID} -cci {COMPUTE-INSTANCE-PROFILE-ID}\nnvidia-smi mig -i 4 -gi 2 -cci 2 \n```\n\n![Note: 자원이 부족해서 1개밖에 못 만든다.](attachment:318514ed-7328-4e4c-b2de-fcb83322dad5.png)\n\n`-` 현재 상황 \n\n![](attachment:e262e8c0-bbc8-4cfa-b836-8bab80440edd.png)\n\n| GPUdev ID | GI ID      | CI ID     | MIGdev ID |\n|--------|------------|-----------|-----------|\n|   1    |  0 (80G)   |  0 (98SM) |     0     |\n|   2    |  0 (80G)   |  0 (98SM) |     0     |\n|   4    |  1 (80G)   |  0 (14SM) |     0     |\n|   4    |  1 (80G)   |  1 (14SM) |     1     |\n|   4    |  1 (80G)   |  2 (14SM) |     2     |\n|   4    |  2 (80G)   |  0 (42SM) |     3     |\n\n## E. 요약 \n\n``` bash\nnvidia-smi mig -i 0 -cgi 0   \nnvidia-smi mig -i 1 -cgi 0   \nnvidia-smi mig -i 2 -cgi 0   \nnvidia-smi mig -i 4 -cgi 0   \nnvidia-smi mig -i 0 -gi 0 -cci 4\nnvidia-smi mig -i 1 -gi 0 -cci 4\nnvidia-smi mig -i 2 -gi 0 -cci 4\nnvidia-smi mig -i 4 -gi 0 -cci 4\n```\n\n# 2. DOCKER\n\n## A. 컨테이너 생성 \n\n`-` 아래와 같은 방식으로 컨테이너 생성 \n\n```bash\n# nvidia-docker run --gpus '\"device={GPUdev-ID}:{MIGdev-ID}\"' -ti --rm -d -t -p {HOST-PORT}:{CONTAINER-PORT} {DOCKER-IMAGE-NAME} /bin/bash\nnvidia-docker run --gpus '\"device=1:0\"' -ti --rm -d -t -p 7749:7749  -p 1307:1307 ubuntu /bin/bash\nnvidia-docker run --gpus '\"device=2:0\"' -ti -d -t -p 4653:4653  -p 1212:1212 -p 1213:1213 -p 1214:1214 ubuntu /bin/bash\n```\n\n- `-ti`: 컨테이너를 대화형(interactive) 모드로 실행. 이 모드에서 컨테이너와 상호작용할 수 있음.\n- `--rm`: 컨테이너가 종료되면 자동으로 컨테이너를 삭제. 이 옵션을 사용하면 컨테이너를 실행한 후 자동으로 정리.\n- `-d`: 컨테이너를 백그라운드(background) 모드로 실행. 이 옵션을 사용하면 컨테이너가 백그라운드에서 실행되며 터미널이 차지되지 않음.\n- `-t`: 컨테이너에 tty (터미널)를 할당. 이것은 대화형 모드와 함께 사용.\n- `/bin/bash`: 컨테이너가 시작될 때 실행할 명령어. 이 경우, Bash 셸을 실행.\n\n\n\n## B. 컨테이너 실행 \n\n```bash\ndocker exec -ti {CONTAINER-ID} bash\n```\n\n\n> 여기에서 `{CONTAINER-ID}`는 `docker ps` 혹은 `docker ps -a`로 확인한다. \n\n## C. 요약 \n\n```bash\nnvidia-docker run --gpus '\"device=2:0\"' -ti -d -t -p ????:???? -p ????:???? -p ????:???? -p ????:???? -p ????:???? --name cgb ubuntu /bin/bash\ndocker exec -ti cgb bash \n```\n\n# 3. UBUNTU \n\n## A. `passwd` \n\n`-` 아래를 실행하여 비밀번호를 바꿀것 \n\n```bash\npasswd root\n```\n\n## B. update \\& 쓸만한 패키지 설치\n\n`-` update \n\n```bash \napt update \napt install gcc\napt install build-essential\n```\n\n`-` 쓸만한 패키지 설치 \n\n```bash\napt install vim # vim \napt install openssh-server # ssh \napt install git # git \napt install tmux\n```\n\n`-` 요약 \n\n```bash\napt update && apt install -y gcc build-essential vim openssh-server git tmux\n```\n\n## D. `ssh` 설정\n\n`-` `/etc/ssh/sshd_config` 열기 \n\n```bash\n# apt install openssh-server\nvi /etc/ssh/sshd_config \n```\n\n`-` `/etc/ssh/sshd_config` 파일내용 맨아래 아래를 추가 \n\n```default\n\n...\n...\nPort {My-SSH-Port}\nPermitRootLogin yes\nPasswordAuthentication yes\n```\n\n`-` 아래를 실행 \n\n```bash \nservice ssh restart\n```\n\n## E. anaconda\n\n`-` 다운로드: <https://www.anaconda.com/download>\n\n`-` (아나콘다 설치) 아나콘다를 다운받은 폴더로 가서 아래와 같이 실행한다. \n\n```bash\nbash Anaconda3-2019.03-Linux-x86_64.sh\n```\n\n대충 `bash Ana` 정도까지만 치고 `tab`을 누르면 알아서 완성된다. \n\n\n## F. vscode \n\n`-` 아래를 이용하여 설치 \n\n```bash\ncurl -Lk 'https://code.visualstudio.com/sha/download?build=stable&os=cli-alpine-x64' --output vscode_cli.tar.gz\ntar -xf vscode_cli.tar.gz\n```\n\n`-` 아래를 이용하여 초기 설정 (깃헙아이디로 인증)\n\n```bash\n./code tunnel \n```\n\n`-` 초기설정 이후 아래를 이용하여 백그라운드에서 실행 \n\n```bash\nnohup ./code tunnel > /dev/null 2>&1 &\n```\n\n## G. Jupyter \n\n`-` 설정파일 생성 \n\n```bash\njupyter notebook --generate-config\n```\n\n`-` 패스워드 설정 \n\n```bash\njupyter notebook password\n## 패스워드 치고\n## 확인해야함\n```\n\n`-` 설정파일을 열고\n\n```bash\nvi /home/cgb2/.jupyter/jupyter_notebook_config.py\n```\n\n아래의 내용을 수정한다.\n\n```default\nc.??????App.ip = '0.0.0.0'\nc.??????App.port = 1307\nc.??????App.allow_origin = '*'\nc.??????App.allow_remote_access = True\nc.??????App.allow_root = True\n```\n\n`-` 주피터 실행할때 아래로 실행 \n\n```bash\nnohup jupyter lab --ip=\"0.0.0.0\" --port={MY-PORT} --no-browser --allow-root > /dev/null 2>&1 &\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"reference-location":"margin","toc":true,"output-file":"2000-01-10-(메모) DGX staion.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.520","theme":"cosmo","title-block-banner":false,"comments":{"utterances":{"repo":"miruetoto/yechan3"}},"bibliography":["ref.bib"],"cap-location":"bottom","citation-location":"margin","code-copy":true,"title":"(메모) DGX station 설정","author":"신록예찬","date":"01/10/2000"},"extensions":{"book":{"multiFile":true}}},"ipynb":{"identifier":{"display-name":"Jupyter","target-format":"ipynb","base-format":"ipynb"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"ipynb","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"default-image-extension":"png","to":"ipynb","reference-location":"margin","output-file":"2000-01-10-(메모) DGX staion.ipynb"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"title-block-banner":false,"comments":{"utterances":{"repo":"miruetoto/yechan3"}},"bibliography":["ref.bib"],"cap-location":"bottom","citation-location":"margin","title":"(메모) DGX station 설정","author":"신록예찬","date":"01/10/2000"}}},"projectFormats":["html"]}